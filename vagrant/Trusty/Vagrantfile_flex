# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "itf_trusty_base_box.box"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  #config.vm.synced_folder "VagrantData", "/vagrant_data"

  # SSH Data
  config.ssh.password="vagrant"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
  #  Display the VirtualBox GUI when booting the machine
     vb.gui = false

  #  Customize the amount of memory on the VM:
     vb.memory = "4096"
   end

   config.vm.provision "bootstrap", type: "shell", inline: <<-SHELL

	#### Vagrant User Configurations
	####
	sudo su vagrant << EOF
export DISPLAY=:0.0

### Install French keyboard (and keep English keyboard)
gsettings set org.gnome.desktop.input-sources sources  "[('xkb', 'us'), ('xkb', 'fr')]"

### Disable the screen blackout and lock:
gsettings set org.gnome.desktop.session idle-delay 0
gsettings set org.gnome.desktop.screensaver ubuntu-lock-on-suspend false
gsettings set org.gnome.desktop.screensaver lock-enabled false

EOF
# The EOF is not indented because whitespace (a tab) causes an error.
	####
	####

	rm -rf Integration-Testing-Framework
	git clone http://github.com/sillsdev/Integration-Testing-Framework
	echo "Installing fieldworks-applications..." > /vagrant/error_log

	### Set permissions and ownership on /home/vagrant
	#sudo find . -name '.*' -prune -o -exec chmod u=rwx,g=rx,o=r {} +
	#sudo find . -name '.*' -prune -o -exec chown -R vagrant . {} +
	sudo chown -R vagrant /home/vagrant/Integration-Testing-Framework

	### Installation of FLEX, the first line assumes "More" is not needed, the second assumes "More" is used.
	sudo apt-get update
	sudo echo "debconf debconf/frontend select Readline" | sudo debconf-set-selections
	sudo expect Integration-Testing-Framework/flex/fwapp_install_nomore.exp 2>> /vagrant/error_log

	### For manual install, use [more] exp script
	#sudo expect Integration-Testing-Framework/flex/fwapp_install.exp 2>> /vagrant/error_log

	### Language libraries
	sudo apt-get -y install fieldworks-l10n-*

   SHELL

end